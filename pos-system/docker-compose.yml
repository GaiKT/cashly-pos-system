version: '3.8'

services:
  # PostgreSQL Database
  postgresql:
    image: postgres:16-alpine
    container_name: pos-postgresql
    restart: unless-stopped
    environment:
      POSTGRES_DB: pos_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    networks:
      - pos-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d pos_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: pos-backend
    restart: unless-stopped
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://admin:password123@postgresql:5432/pos_db?sslmode=disable
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
      - FACEBOOK_CLIENT_SECRET=${FACEBOOK_CLIENT_SECRET}
      - CORS_ORIGIN=http://localhost:3000
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      - /app/vendor
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - pos-network
    command: air -c .air.toml

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: pos-frontend
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080/api
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-nextauth-secret-change-in-production
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
      - FACEBOOK_CLIENT_SECRET=${FACEBOOK_CLIENT_SECRET}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - pos-network
    command: npm run dev

volumes:
  postgresql_data:
    driver: local

networks:
  pos-network:
    driver: bridge
